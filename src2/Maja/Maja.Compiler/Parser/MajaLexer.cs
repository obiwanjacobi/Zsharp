//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\My\MyProjects\Zsharp\src2\Maja\Maja.Compiler\MajaLexer.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Maja.Compiler.Parser {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class MajaLexer : Dentlr.DentlrLexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		INDENT=1, DEDENT=2, COMMENTstart=3, COMMENTwarning=4, COMMENT=5, RET=6, 
		PUB=7, USE=8, SELF=9, IDENTIFIER=10, PARENopen=11, PARENclose=12, ANGLEopen=13, 
		ANGLEclose=14, HASH=15, COLON=16, DOT=17, EQ=18, UNUSED=19, COMMA=20, 
		SP=21, EOL=22;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"COMMENTstart", "COMMENTwarning", "COMMENT", "RET", "PUB", "USE", "SELF", 
		"IDENTIFIER", "ALPHA", "DIGIT2", "DIGIT8", "DIGIT10", "DIGIT16", "PARENopen", 
		"PARENclose", "ANGLEopen", "ANGLEclose", "HASH", "COLON", "DOT", "EQ", 
		"UNUSED", "COMMA", "SP", "EOL"
	};


	public MajaLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MajaLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'#_'", "'##'", null, "'ret'", "'pub'", "'use'", "'self'", 
		null, "'('", "')'", "'<'", "'>'", "'#'", "':'", "'.'", "'='", "'_'", "','", 
		"' '"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INDENT", "DEDENT", "COMMENTstart", "COMMENTwarning", "COMMENT", 
		"RET", "PUB", "USE", "SELF", "IDENTIFIER", "PARENopen", "PARENclose", 
		"ANGLEopen", "ANGLEclose", "HASH", "COLON", "DOT", "EQ", "UNUSED", "COMMA", 
		"SP", "EOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MajaLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static MajaLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x18', '\x8E', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x4', '\x3', '\x4', '\x5', '\x4', '>', '\n', '\x4', '\x3', 
		'\x4', '\a', '\x4', '\x41', '\n', '\x4', '\f', '\x4', '\xE', '\x4', '\x44', 
		'\v', '\x4', '\x3', '\x4', '\x6', '\x4', 'G', '\n', '\x4', '\r', '\x4', 
		'\xE', '\x4', 'H', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\a', '\t', '`', '\n', '\t', '\f', '\t', '\xE', '\t', '\x63', '\v', 
		'\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', 
		'\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', 
		'\x19', '\x3', '\x19', '\x3', '\x1A', '\x5', '\x1A', '\x86', '\n', '\x1A', 
		'\x3', '\x1A', '\x3', '\x1A', '\x5', '\x1A', '\x8A', '\n', '\x1A', '\x3', 
		'\x1A', '\x5', '\x1A', '\x8D', '\n', '\x1A', '\x3', '\x42', '\x2', '\x1B', 
		'\x3', '\x5', '\x5', '\x6', '\a', '\a', '\t', '\b', '\v', '\t', '\r', 
		'\n', '\xF', '\v', '\x11', '\f', '\x13', '\x2', '\x15', '\x2', '\x17', 
		'\x2', '\x19', '\x2', '\x1B', '\x2', '\x1D', '\r', '\x1F', '\xE', '!', 
		'\xF', '#', '\x10', '%', '\x11', '\'', '\x12', ')', '\x13', '+', '\x14', 
		'-', '\x15', '/', '\x16', '\x31', '\x17', '\x33', '\x18', '\x3', '\x2', 
		'\b', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x4', '\x2', '\x43', '\\', 
		'\x63', '|', '\x3', '\x2', '\x32', '\x33', '\x3', '\x2', '\x32', '\x39', 
		'\x3', '\x2', '\x32', ';', '\x5', '\x2', '\x32', ';', '\x43', 'H', '\x63', 
		'h', '\x2', '\x91', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', 
		'\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x33', '\x3', '\x2', '\x2', '\x2', '\x3', '\x35', '\x3', '\x2', '\x2', 
		'\x2', '\x5', '\x38', '\x3', '\x2', '\x2', '\x2', '\a', '=', '\x3', '\x2', 
		'\x2', '\x2', '\t', 'J', '\x3', '\x2', '\x2', '\x2', '\v', 'N', '\x3', 
		'\x2', '\x2', '\x2', '\r', 'R', '\x3', '\x2', '\x2', '\x2', '\xF', 'V', 
		'\x3', '\x2', '\x2', '\x2', '\x11', '[', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'\x64', '\x3', '\x2', '\x2', '\x2', '\x15', '\x66', '\x3', '\x2', '\x2', 
		'\x2', '\x17', 'h', '\x3', '\x2', '\x2', '\x2', '\x19', 'j', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', 'l', '\x3', '\x2', '\x2', '\x2', '\x1D', 'n', '\x3', 
		'\x2', '\x2', '\x2', '\x1F', 'p', '\x3', '\x2', '\x2', '\x2', '!', 'r', 
		'\x3', '\x2', '\x2', '\x2', '#', 't', '\x3', '\x2', '\x2', '\x2', '%', 
		'v', '\x3', '\x2', '\x2', '\x2', '\'', 'x', '\x3', '\x2', '\x2', '\x2', 
		')', 'z', '\x3', '\x2', '\x2', '\x2', '+', '|', '\x3', '\x2', '\x2', '\x2', 
		'-', '~', '\x3', '\x2', '\x2', '\x2', '/', '\x80', '\x3', '\x2', '\x2', 
		'\x2', '\x31', '\x82', '\x3', '\x2', '\x2', '\x2', '\x33', '\x8C', '\x3', 
		'\x2', '\x2', '\x2', '\x35', '\x36', '\a', '%', '\x2', '\x2', '\x36', 
		'\x37', '\a', '\x61', '\x2', '\x2', '\x37', '\x4', '\x3', '\x2', '\x2', 
		'\x2', '\x38', '\x39', '\a', '%', '\x2', '\x2', '\x39', ':', '\a', '%', 
		'\x2', '\x2', ':', '\x6', '\x3', '\x2', '\x2', '\x2', ';', '>', '\x5', 
		'\x3', '\x2', '\x2', '<', '>', '\x5', '\x5', '\x3', '\x2', '=', ';', '\x3', 
		'\x2', '\x2', '\x2', '=', '<', '\x3', '\x2', '\x2', '\x2', '>', '\x42', 
		'\x3', '\x2', '\x2', '\x2', '?', '\x41', '\v', '\x2', '\x2', '\x2', '@', 
		'?', '\x3', '\x2', '\x2', '\x2', '\x41', '\x44', '\x3', '\x2', '\x2', 
		'\x2', '\x42', '\x43', '\x3', '\x2', '\x2', '\x2', '\x42', '@', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\x46', '\x3', '\x2', '\x2', '\x2', '\x44', 
		'\x42', '\x3', '\x2', '\x2', '\x2', '\x45', 'G', '\n', '\x2', '\x2', '\x2', 
		'\x46', '\x45', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\x3', '\x2', '\x2', 
		'\x2', 'H', '\x46', '\x3', '\x2', '\x2', '\x2', 'H', 'I', '\x3', '\x2', 
		'\x2', '\x2', 'I', '\b', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\a', 't', 
		'\x2', '\x2', 'K', 'L', '\a', 'g', '\x2', '\x2', 'L', 'M', '\a', 'v', 
		'\x2', '\x2', 'M', '\n', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\a', 'r', 
		'\x2', '\x2', 'O', 'P', '\a', 'w', '\x2', '\x2', 'P', 'Q', '\a', '\x64', 
		'\x2', '\x2', 'Q', '\f', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\a', 'w', 
		'\x2', '\x2', 'S', 'T', '\a', 'u', '\x2', '\x2', 'T', 'U', '\a', 'g', 
		'\x2', '\x2', 'U', '\xE', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\a', 
		'u', '\x2', '\x2', 'W', 'X', '\a', 'g', '\x2', '\x2', 'X', 'Y', '\a', 
		'n', '\x2', '\x2', 'Y', 'Z', '\a', 'h', '\x2', '\x2', 'Z', '\x10', '\x3', 
		'\x2', '\x2', '\x2', '[', '\x61', '\x5', '\x13', '\n', '\x2', '\\', '`', 
		'\x5', '\x13', '\n', '\x2', ']', '`', '\x5', '\x19', '\r', '\x2', '^', 
		'`', '\x5', '-', '\x17', '\x2', '_', '\\', '\x3', '\x2', '\x2', '\x2', 
		'_', ']', '\x3', '\x2', '\x2', '\x2', '_', '^', '\x3', '\x2', '\x2', '\x2', 
		'`', '\x63', '\x3', '\x2', '\x2', '\x2', '\x61', '_', '\x3', '\x2', '\x2', 
		'\x2', '\x61', '\x62', '\x3', '\x2', '\x2', '\x2', '\x62', '\x12', '\x3', 
		'\x2', '\x2', '\x2', '\x63', '\x61', '\x3', '\x2', '\x2', '\x2', '\x64', 
		'\x65', '\t', '\x3', '\x2', '\x2', '\x65', '\x14', '\x3', '\x2', '\x2', 
		'\x2', '\x66', 'g', '\t', '\x4', '\x2', '\x2', 'g', '\x16', '\x3', '\x2', 
		'\x2', '\x2', 'h', 'i', '\t', '\x5', '\x2', '\x2', 'i', '\x18', '\x3', 
		'\x2', '\x2', '\x2', 'j', 'k', '\t', '\x6', '\x2', '\x2', 'k', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', 'l', 'm', '\t', '\a', '\x2', '\x2', 'm', '\x1C', 
		'\x3', '\x2', '\x2', '\x2', 'n', 'o', '\a', '*', '\x2', '\x2', 'o', '\x1E', 
		'\x3', '\x2', '\x2', '\x2', 'p', 'q', '\a', '+', '\x2', '\x2', 'q', ' ', 
		'\x3', '\x2', '\x2', '\x2', 'r', 's', '\a', '>', '\x2', '\x2', 's', '\"', 
		'\x3', '\x2', '\x2', '\x2', 't', 'u', '\a', '@', '\x2', '\x2', 'u', '$', 
		'\x3', '\x2', '\x2', '\x2', 'v', 'w', '\a', '%', '\x2', '\x2', 'w', '&', 
		'\x3', '\x2', '\x2', '\x2', 'x', 'y', '\a', '<', '\x2', '\x2', 'y', '(', 
		'\x3', '\x2', '\x2', '\x2', 'z', '{', '\a', '\x30', '\x2', '\x2', '{', 
		'*', '\x3', '\x2', '\x2', '\x2', '|', '}', '\a', '?', '\x2', '\x2', '}', 
		',', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\a', '\x61', '\x2', '\x2', 
		'\x7F', '.', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\a', '.', '\x2', 
		'\x2', '\x81', '\x30', '\x3', '\x2', '\x2', '\x2', '\x82', '\x83', '\a', 
		'\"', '\x2', '\x2', '\x83', '\x32', '\x3', '\x2', '\x2', '\x2', '\x84', 
		'\x86', '\a', '\xF', '\x2', '\x2', '\x85', '\x84', '\x3', '\x2', '\x2', 
		'\x2', '\x85', '\x86', '\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\x3', 
		'\x2', '\x2', '\x2', '\x87', '\x8A', '\a', '\f', '\x2', '\x2', '\x88', 
		'\x8A', '\a', '\xF', '\x2', '\x2', '\x89', '\x85', '\x3', '\x2', '\x2', 
		'\x2', '\x89', '\x88', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x8D', '\x3', 
		'\x2', '\x2', '\x2', '\x8B', '\x8D', '\a', '\x2', '\x2', '\x3', '\x8C', 
		'\x89', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8B', '\x3', '\x2', '\x2', 
		'\x2', '\x8D', '\x34', '\x3', '\x2', '\x2', '\x2', '\v', '\x2', '=', '\x42', 
		'H', '_', '\x61', '\x85', '\x89', '\x8C', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Maja.Compiler.Parser
